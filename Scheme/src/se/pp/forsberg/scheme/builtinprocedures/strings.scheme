(define-library (scheme-impl strings)
  (import (scheme-impl base))
  (import (scheme-impl control))
  (import (scheme-impl numbers))

  (export string>? string>=? string-ci=? string-ci<? string-ci>? string-ci<=? string-ci>=?)

  (begin
      (define (string>? . x) (not (apply string<=? x)))
      (define (string>=? . x) (not (apply string<? x)))
      
      (define (string-ci=? . x) (apply string=? (map string-foldcase x)))
      (define (string-ci<? . x) (apply string<? (map string-foldcase x)))
      (define (string-ci>? . x) (apply string>? (map string-foldcase x)))
      (define (string-ci<=? . x) (apply string<=? (map string-foldcase x)))
      (define (string-ci>=? . x) (apply string>=? (map string-foldcase x)))
  )
)