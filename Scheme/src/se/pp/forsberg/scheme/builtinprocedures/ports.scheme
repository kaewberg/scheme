(define-library (scheme-impl ports)
  (import (scheme-impl base))
  (export call-with-port call-with-input-file call-with-output-file)
  (export textual-port? binary-port? open-binary-input-file open-binary-output-file)
  
  (begin
    (define (call-with-port port proc)
      (let ((result (proc port)))
        (close-port port)
        result))
    (define (call-with-input-file filename proc)
      (call-with-port (open-input-file filename) proc))
    (define (call-with-output-file filename proc)
      (call-with-port (open-output-file filename) proc))
    (define (textual-port? obj) (port? obj))
    (define (binary-port? obj) (port? obj))
    (define (open-binary-input-file filename) (open-input-file filename))
    (define (open-binary-output-file filename) (open-output-file filename))
  )
)